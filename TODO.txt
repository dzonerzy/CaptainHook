[x] Call convention detection
[x] Function detection  
[x] Function arguments detection
[x] Function return type detection
[x] Function Control Flow Graph
[x] Function Basic Blocks
[x] Basic Hook functionality for 64 bits (gcc & msvc)
[x] Basic Hook functionality for 32 bits (gcc & msvc)
[x] Missing parameter reordering
[-] Missing IR for mov reg, [reg+reg] / lea reg, [reg+reg] / addss reg, [reg+reg] / subss reg, [reg+reg]
[x] Handle cases where params are not retrieved in the first basic block
[x] Handle SIMD instruction like addss which can reference stack like addss
[x] Handle instruction like add which can reference stack
[x] Handle cases when a parameter is set in the caller but reset in the callee, this should not be considered as a parameter
[ ] Handle cases when the trampoline contains conditional jmp (take care of conditional jmp inside the trampoline itself)
[ ] Use only one between stack and mem or maybe use mem only for offset which reference RIP register
[x] Handle case when hooked function (WINAPI) have conditional jmp to other functions , ignore those in that case
[ ] Handle xor reg1,reg2
[x] handle cases where push reference stack
[x] add function to retrieve and modify parameters
[ ] remote hooking?
[x] fixed hooking remove heap-user-after-free
[ ] disallow multiple hook on same address or change the way it works (instead of hook index search for hook hash)
[ ] add cpthk_create_trampoline this basically allow call the function with custom args, it's not an hook but a remote function definition 